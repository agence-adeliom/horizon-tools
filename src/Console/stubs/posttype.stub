<?php

declare(strict_types=1);

namespace %%NAMESPACE%%;

use %%PARENT_NAMESPACE%%;

class %%CLASS%% extends %%PARENT%%
{
    public static ?string $slug = '%%SLUG%%';

    // Blade component used to render the card in the listing
    public static ?string $card = null;

    public function getConfig(array $config = []): array
    {
        $config['args'] =[
            'label'=> '%%CPT_NAME%%',
            'labels'=>[
                'name'=> '%%CPT_NAME%%',
                'singular_name'=> '%%CPT_NAME%%',
                'menu_name'=> '%%CPT_NAME%%',
                'add_new'=> 'Ajouter un élément',
                'add_new_item'=> 'Ajouter un nouvel élément',
                'edit_item'=> 'Modifier l’élément',
                'new_item'=> 'Nouvel élément',
                'view_item'=> 'Voir l’élément',
                'view_items'=> 'Voir les éléments',
                'search_items'=> 'Rechercher un élément',
                'not_found'=> 'Aucun élément trouvé',
                'not_found_in_trash'=> 'Aucun élément trouvé dans la corbeille',
                'all_items'=> 'Tous les éléments',
                'archives'=> 'Archives des éléments',
            ],
            'menu_icon'=> 'dashicons-admin-post',
            'supports'=> ['title', 'editor'],
            // 'rewrite'=> ['slug'=> 'custom'],
        ];

        return parent::getConfig($config);
    }

    public function getFields(): ?iterable
    {
        return null;
    }

    public function getPosition(): string
    {
        return 'side';
    }

    /**
     * Allow to set filters that will be used inside generic listings
     * @return array
     */
    public function getFilters(): array
    {
        // return [
        //     [
        //         'name' => 'fieldname', // Name of the filter field in the filter form
        //         'type' => FilterTypesEnum::TAXONOMY, // Filter type (taxonomy or meta)
        //         'appearance' => 'select', // Appearance of the filter (only select supported)
        //         'value' => \App\Taxonomies\Taxonomy::$slug, // Slug of the taxonomy
        //         'placeholder'=>'Toutes les options' // Placeholder of the field (or label of "all" options)
        //     ],
        //     [
        //         'name' => 'city', // Name of the filter field in the filter form
        //         'type' => FilterTypesEnum::META, // Filter type (taxonomy or meta)
        //         'appearance' => 'select', // Appearance of the filter (only select supported)
        //         'value' => self::FIELD_CITY, // Full name of the meta field (be careful if in groups for instance)
        //         'fieldClass' => Text::class, // Field class of the ACF field
        //         'placeholder' => 'Toutes les villes' // Placeholder of the field (or label of "all" options)
        //     ],
        // ];

        return [];
    }
}